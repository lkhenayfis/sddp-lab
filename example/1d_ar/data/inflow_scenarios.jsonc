{
    // defines the autorregressive models for each system element
    "marginal_models": [
        {
            "id": 1,

            // last `max_lag` observations of the time series as was for model fitting,
            // where `max_lag` represents the maximum lag over all seasonal models
            // Note it should be ordered [t-1, t-2, ..., t-max_lag], i.e, reversed as the
            // normal time series data
            "initial_values": [0.0],

            // array of model parameters
            "models": [
                {
                    // 'season' should be an integer compatible with the type of stage 
                    // defined in "stages.jsonc", i.e. if 'monthly' seasons vary in [1, 12]
                    // TODO better documentation for the collateral effect of arbitrary 
                    // numbers of seasons
                    "season": 1,
                    // array of parameters, starting at lag 1
                    "coefficients": [0.8],
                    // variance of the GAUSSIAN additive residual of the model, scalar float
                    "residual_variance": 1.0,
                    // mean and std for re-scaling
                    // useful if models where fitted to deseasonalized data
                    "scale_parameters": [0.0, 1.0]
                },
                {
                    "season": 2,
                    "coefficients": [0.8],
                    "residual_variance": 1.0,
                    "scale_parameters": [0.0, 1.0]
                },
                {
                    "season": 3,
                    "coefficients": [0.8],
                    "residual_variance": 1.0,
                    "scale_parameters": [0.0, 1.0]
                },
                {
                    "season": 4,
                    "coefficients": [0.8],
                    "residual_variance": 1.0,
                    "scale_parameters": [0.0, 1.0]
                },
                {
                    "season": 5,
                    "coefficients": [0.8],
                    "residual_variance": 1.0,
                    "scale_parameters": [0.0, 1.0]
                },
                {
                    "season": 6,
                    "coefficients": [0.8],
                    "residual_variance": 1.0,
                    "scale_parameters": [0.0, 1.0]
                },
                {
                    "season": 7,
                    "coefficients": [0.8],
                    "residual_variance": 1.0,
                    "scale_parameters": [0.0, 1.0]
                },
                {
                    "season": 8,
                    "coefficients": [0.8],
                    "residual_variance": 1.0,
                    "scale_parameters": [0.0, 1.0]
                },
                {
                    "season": 9,
                    "coefficients": [0.8],
                    "residual_variance": 1.0,
                    "scale_parameters": [0.0, 1.0]
                },
                {
                    "season": 10,
                    "coefficients": [0.8],
                    "residual_variance": 1.0,
                    "scale_parameters": [0.0, 1.0]
                },
                {
                    "season": 11,
                    "coefficients": [0.8],
                    "residual_variance": 1.0,
                    "scale_parameters": [0.0, 1.0]
                },
                {
                    "season": 12,
                    "coefficients": [0.8],
                    "residual_variance": 1.0,
                    "scale_parameters": [0.0, 1.0]
                }
            ]
        }
    ],

    // defines the copulas used for multivariate simulation
    // to achieve independent models one may use GaussianCopula with identity R matrix
    "copulas": [
        {
            "season": 1,
            // copula kind, should be one implemented by Copulas.jl
            "kind": "GaussianCopula",
            // copula parameters, check the individual documentations for how each copula is
            // parametrized
            // In the case of matrix parameters, supply an array of arrays which will be 
            // used to construct the matrix IN A ROW MAJOR FASHION, i.e. each sub-array
            // will become an individual row
            "parameters": [
                [1.0]
            ]
        },
        {
            "season": 2,
            "kind": "GaussianCopula",
            "parameters": [
                [1.0]
            ]
        },
        {
            "season": 3,
            "kind": "GaussianCopula",
            "parameters": [
                [1.0]
            ]
        },
        {
            "season": 4,
            "kind": "GaussianCopula",
            "parameters": [
                [1.0]
            ]
        },
        {
            "season": 5,
            "kind": "GaussianCopula",
            "parameters": [
                [1.0]
            ]
        },
        {
            "season": 6,
            "kind": "GaussianCopula",
            "parameters": [
                [1.0]
            ]
        },
        {
            "season": 7,
            "kind": "GaussianCopula",
            "parameters": [
                [1.0]
            ]
        },
        {
            "season": 8,
            "kind": "GaussianCopula",
            "parameters": [
                [1.0]
            ]
        },
        {
            "season": 9,
            "kind": "GaussianCopula",
            "parameters": [
                [1.0]
            ]
        },
        {
            "season": 10,
            "kind": "GaussianCopula",
            "parameters": [
                [1.0]
            ]
        },
        {
            "season": 11,
            "kind": "GaussianCopula",
            "parameters": [
                [1.0]
            ]
        },
        {
            "season": 12,
            "kind": "GaussianCopula",
            "parameters": [
                [1.0]
            ]
        }
    ]
}